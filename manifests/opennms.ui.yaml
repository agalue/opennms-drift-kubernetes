# @author Alejandro Galue <agalue@opennms.org>
#
# This is an optional component
#
# NOTES:
# - I'm not a fan of this use case, and can only embrace it as either to provide additional
#   horsepower for the ReST API, or as a limited WebUI (not all features available).
#
# WARNING:
# - NRTG won't work on the UI servers (currently it redirects to the core server through Ingress).
# - Jasper and KSC Reports will partially work on the UI servers.
# - Due to the read-only capabilities, external authentication system must be in-place.
#
# TODO:
# - Mount /opt/opennms/etc via NFS from the Core server:
#   * Graph templates
#   * Data Collection configuration
#   * Resource Types configuration
#   * Jasper and KSC Reports
#   * Users/Groups

---
apiVersion: v1
kind: Service
metadata:
  name: opennms-ui
  namespace: opennms
  labels:
    app: onms-ui
spec:
  ports:
  - port: 8980
    name: http
  - port: 8101
    name: karaf
  selector:
    app: onms-ui

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onms-ui
  namespace: opennms
  labels:
    app: onms-ui
spec:
  replicas: 2
  selector:
    matchLabels:
      app: onms-ui
  template:
    metadata:
      labels:
        app: onms-ui
    spec:
      affinity: # Avoid scheduling the pod in the same host as the Core OpenNMS when possible
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - onms
      initContainers:
      # Wait for all the dependencies
      - name: dependencies
        image: waisbrot/wait
        imagePullPolicy: IfNotPresent
        env:
        - name: TARGETS
          value: grafana.opennms.svc.cluster.local:3000,opennms-core.opennms.svc.cluster.local:8980
        - name: TIMEOUT
          value: '900'
      # Initialize OpenNMS UI Configuration
      # Requires the same image/version used at runtime: horizon
      - name: init-config
        image: opennms/horizon:28.0.2
        imagePullPolicy: IfNotPresent
        command: [ bash, /init.sh ]
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: DOMAIN
          valueFrom:
            configMapKeyRef:
              key: DOMAIN
              name: common-settings
        - name: INSTANCE_ID
          valueFrom:
            configMapKeyRef:
              key: OPENNMS_INSTANCE_ID
              name: common-settings
        - name: CASSANDRA_SERVER
          value: cassandra.opennms.svc.cluster.local
        - name: ELASTIC_SERVER
          value: esdata.opennms.svc.cluster.local
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              key: ELASTICSEARCH_PASSWORD
              name: onms-passwords
        - name: ELASTIC_INDEX_STRATEGY_FLOWS
          valueFrom:
            configMapKeyRef:
              key: ELASTIC_INDEX_STRATEGY_FLOWS
              name: common-settings
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: GRAFANA_UI_ADMIN_PASSWORD
              name: onms-passwords
        - name: GRAFANA_URL
          value: http://grafana.opennms.svc.cluster.local:3000
        - name: GRAFANA_PUBLIC_URL
          value: https://grafana.$(DOMAIN)
        volumeMounts:
        - name: etc-overlay
          mountPath: /opt/opennms-etc-overlay
        - name: web-overlay
          mountPath: /opt/opennms-jetty-webinf-overlay
        - name: init-scripts
          mountPath: /init.sh
          subPath: onms-ui-init.sh
      containers:
      - name: onms-ui
        image: opennms/horizon:28.0.2
        imagePullPolicy: IfNotPresent
        args:
        - -s
        ports:
        - containerPort: 8101
          name: karaf
        - containerPort: 8980
          name: http
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: MEM_TOTAL_MB
          valueFrom:
            resourceFieldRef:
              resource: requests.memory
              divisor: 1Mi
        - name: JAVA_OPTS # Preferred way instead of opennms.conf
          value: -XX:+UseG1GC -Xms$(MEM_TOTAL_MB)m -Xmx$(MEM_TOTAL_MB)m
        - name: POSTGRES_HOST
          value: postgresql.opennms.svc.cluster.local
        - name: POSTGRES_PORT
          value: '5432'
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: onms-passwords
        - name: OPENNMS_DBNAME
          value: opennms
        - name: OPENNMS_DBUSER
          value: opennms
        - name: OPENNMS_DBPASS
          valueFrom:
            secretKeyRef:
              key: OPENNMS_DB_PASSWORD
              name: onms-passwords
        volumeMounts:
        - name: etc-overlay
          mountPath: /opt/opennms-etc-overlay
        - name: web-overlay
          mountPath: /opt/opennms-jetty-webinf-overlay
        resources:
          limits:
            cpu: '2'
            memory: 6Gi
          requests:
            cpu: 500m
            memory: 4Gi
        readinessProbe:
          httpGet:
            path: /opennms/login.jsp
            port: http
          initialDelaySeconds: 15
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /opennms/login.jsp
            port: http
          initialDelaySeconds: 30
          periodSeconds: 60
      volumes:
      - name: etc-overlay
        emptyDir: {}
      - name: web-overlay
        emptyDir: {}
      - name: init-scripts
        configMap:
          name: init-scripts
