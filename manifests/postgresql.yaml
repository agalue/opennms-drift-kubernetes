# @author Alejandro Galue <agalue@opennms.org>
#
# WARNING:
# - PostgreSQL expects to have very fast disks for the PVC to avoid performance issues.
# - Make sure to tune the max_connections to accomodate ONMS, Sentinels servers, UI servers and Grafana.
# - Make sure to tune the rest of the settings based on https://pgtune.leopard.in.ua/#/
# - The postgres user (uid: 999, gid: 999) cannot be used in OpenShift by default.

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
  namespace: opennms
  labels:
    app: postgresql
data:
  # Based on https://pgtune.leopard.in.ua/#/ for the configured requested limits
  postgresql.conf: |+
    listen_addresses = '*'
    shared_buffers = 512MB
    max_connections = 300
    effective_cache_size = 1536MB
    maintenance_work_mem = 128MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 300
    work_mem = 873kB
    min_wal_size = 1GB
    max_wal_size = 2GB
    max_worker_processes = 2
    max_parallel_workers_per_gather = 1
    max_parallel_workers = 2

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: opennms
  labels:
    app: postgres
spec:
  clusterIP: None
  ports:
  - port: 5432
  selector:
    app: postgres

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: opennms
  labels:
    app: postgres
    role: master
spec:
  serviceName: postgresql
  replicas: 1 # The solution only allows 1 instance
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        role: master
    spec:
      containers:
      - name: postgres
        image: postgres:13
        imagePullPolicy: IfNotPresent
        args:
          - postgres
          - -c
          - 'config_file=/etc/postgresql.conf'
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: PGUSER
          value: postgres
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: onms-passwords
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
          name: pg
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        - name: postgresql-config
          mountPath: /etc/postgresql.conf
          subPath: postgresql.conf
        resources:
          limits:
            cpu: '4'
            memory: 4Gi
          requests:
            cpu: '2'
            memory: 2Gi
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $HOSTNAME
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $HOSTNAME
          initialDelaySeconds: 30
          periodSeconds: 60
      volumes:
      - name: postgresql-config
        configMap:
          name: postgresql-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
