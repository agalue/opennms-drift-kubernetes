# @author Alejandro Galue <agalue@opennms.org>
#
# WARNING:
# - The cluster is not exposed to the Internet.
# - KAFKA_DEFAULT_REPLICATION_FACTOR should be consistent with the number of replicas.
# - KAFKA_NUM_PARTITIONS should be greater than the number of replicas.

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: opennms
  labels:
    app: kafka
spec:
  clusterIP: None
  ports:
  - port: 9092
    name: client
  - port: 9999
    name: jmx
  selector:
    app: kafka

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: opennms
  labels:
    app: kafka
spec:
  serviceName: kafka
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      terminationGracePeriodSeconds: 300
      initContainers:
      - name: dependencies
        image: waisbrot/wait
        imagePullPolicy: IfNotPresent
        env:
        - name: TARGETS
          value: zookeeper.opennms.svc.cluster.local:2181
        - name: TIMEOUT
          value: '900'
      containers:
      - name: kafka
        image: bitnami/kafka:2.8.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: client
        - containerPort: 9999
          name: jmx
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: BROKER_ID_COMMAND # Extracts ID from Pod name, guaranteed to be constant thanks to the StatefulSet
          value: echo ${HOSTNAME##*-}
        - name: ALLOW_PLAINTEXT_LISTENER
          value: 'yes'
        - name: KAFKA_CLIENT_USERS
          valueFrom:
            secretKeyRef:
              key: KAFKA_CLIENT_USER
              name: onms-passwords
        - name: KAFKA_CLIENT_PASSWORDS
          valueFrom:
            secretKeyRef:
              key: KAFKA_CLIENT_PASSWORD
              name: onms-passwords
        - name: KAFKA_INTER_BROKER_USER
          valueFrom:
            secretKeyRef:
              key: KAFKA_INTER_BROKER_USER
              name: onms-passwords
        - name: KAFKA_INTER_BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: KAFKA_INTER_BROKER_PASSWORD
              name: onms-passwords
        - name: KAFKA_CFG_LISTENERS
          value: CLIENT://:9092,INTERNAL://:9093
        - name: KAFKA_CFG_ADVERTISED_LISTENERS # Kafka available only inside K8s
          value: CLIENT://:9092,INTERNAL://:9093
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: CLIENT:SASL_PLAINTEXT,INTERNAL:SASL_PLAINTEXT
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: INTERNAL
        - name: KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL
          value: PLAIN
        - name: KAFKA_CFG_SASL_ENABLED_MECHANISMS
          value: PLAIN
        - name: KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS
          value: '30000'
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: zookeeper.opennms.svc.cluster.local:2181/kafka
        - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
          valueFrom: # Must be consistent with the cluster size
            configMapKeyRef:
              key: KAFKA_REPLICATION_FACTOR
              name: common-settings
        - name: KAFKA_CFG_MIN_INSYNC_REPLICAS
          value: '1'
        - name: KAFKA_CFG_NUM_PARTITIONS # Must be greater than the number of Minions per location
          valueFrom: # Must be consistent with the chosen amount of replicas
            configMapKeyRef:
              key: KAFKA_NUM_PARTITIONS
              name: common-settings
        - name: KAFKA_CFG_AUTO_LEADER_REBALANCE_ENABLE
          value: 'true'
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE # Required by OpenNMS and Minions
          value: 'true'
        - name: KAFKA_CFG_DELETE_TOPIC_ENABLE # Recommended to avoid disrupting messages workflow
          value: 'false'
        - name: KAFKA_CFG_CONTROLLED_SHUTDOWN_ENABLE
          value: 'true'
        - name: KAFKA_CFG_MESSAGE_MAX_BYTES # Recommended for the OpenNMS Kafka Producer
          value: '5000000'
        - name: KAFKA_CFG_REPLICA_FETCH_MAX_BYTES # Recommended for the OpenNMS Kafka Producer
          value: '5000000'
        - name: KAFKA_CFG_COMPRESSION_TYPE
          value: producer
        - name: JMX_PORT
          value: '9999'
        - name: MEM_TOTAL_MB
          valueFrom:
            resourceFieldRef:
              resource: requests.memory
              divisor: 1Mi
        - name: KAFKA_HEAP_OPTS
          value: -Xms$(MEM_TOTAL_MB)m -Xmx$(MEM_TOTAL_MB)m -Dcom.sun.management.jmxremote.rmi.port=$(JMX_PORT) -Djava.rmi.server.hostname=$(POD_IP)
        volumeMounts:
        - name: data
          mountPath: /bitnami/kafka
        resources:
          limits:
            memory: 4Gi
            cpu: '2'
          requests:
            memory: 2Gi
            cpu: '1'
        readinessProbe:
          tcpSocket:
            port: client
          initialDelaySeconds: 20
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: client
          initialDelaySeconds: 30
          periodSeconds: 60
      volumes:
      - name: config
        secret:
          secretName: onms-passwords
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
