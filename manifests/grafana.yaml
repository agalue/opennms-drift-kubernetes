# @author Alejandro Galue <agalue@opennms.org>
#
# TODO
# Consider switching to StatefulSet to guarantee zero collisions when creating the PG database.

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: opennms
  labels:
    app: grafana
spec:
  ports:
  - port: 3000
    name: http
  selector:
    app: grafana

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: opennms
  labels:
    app: grafana
spec:
  replicas: 2
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
      - name: dependencies
        image: waisbrot/wait
        imagePullPolicy: IfNotPresent
        env:
        - name: TARGETS
          value: postgresql.opennms.svc.cluster.local:5432
        - name: TIMEOUT
          value: '900'
      - name: init-database # Should run once (regardless of the replicas)
        image: postgres:13
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - /bin/grafana-init.sh
        env:
        - name: PGHOST
          value: postgresql.opennms.svc.cluster.local
        - name: PGPORT
          value: '5432'
        - name: PGUSER
          value: postgres
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: onms-passwords
        - name: GF_DATABASE_NAME
          value: grafana
        - name: GF_DATABASE_USER
          valueFrom:
            secretKeyRef:
              key: GRAFANA_DB_USERNAME
              name: onms-passwords
        - name: GF_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: GRAFANA_DB_PASSWORD
              name: onms-passwords
        volumeMounts:
        - name: init-scripts
          mountPath: /bin/grafana-init.sh
          subPath: grafana-init.sh
      containers:
      - name: grafana-helm
        image: opennms/helm:7.1.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: DOMAIN
          valueFrom:
            configMapKeyRef:
              key: DOMAIN
              name: common-settings
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: GRAFANA_UI_ADMIN_PASSWORD
              name: onms-passwords
        - name: GF_SERVER_DOMAIN
          value: grafana.$(DOMAIN)
        - name: GF_SERVER_ROOT_URL
          value: /
        - name: PGHOST
          value: postgresql.opennms.svc.cluster.local
        - name: PGPORT
          value: '5432'
        - name: GF_DATABASE_TYPE
          value: postgres
        - name: GF_DATABASE_SSL_MODE
          value: disable
        - name: GF_DATABASE_HOST
          value: $(PGHOST):$(PGPORT)
        - name: GF_DATABASE_NAME
          value: grafana
        - name: GF_DATABASE_USER
          valueFrom:
            secretKeyRef:
              key: GRAFANA_DB_USERNAME
              name: onms-passwords
        - name: GF_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: GRAFANA_DB_PASSWORD
              name: onms-passwords
        - name: GF_SESSION_PROVIDER
          value: postgres
        - name: GF_SESSION_PROVIDER_CONFIG
          value: dbname=$(GF_DATABASE_NAME) user=$(GF_DATABASE_USER) password=$(GF_DATABASE_PASSWORD) host=$(PGHOST) port=$(PGPORT) sslmode=$(GF_DATABASE_SSL_MODE)
        - name: GF_RENDERING_SERVER_URL
          value: http://grafana-renderer:8081/render
        - name: GF_RENDERING_CALLBACK_URL
          value: http://grafana:3000/
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 60
      volumes:
      - name: init-scripts
        configMap:
          name: init-scripts
