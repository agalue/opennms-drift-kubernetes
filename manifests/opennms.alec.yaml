# @author Alejandro Galue <agalue@opennms.org>
#
# WARNING:
# - Internet access from the container is required to retrieve ALEC binaries from GitHub.

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: alec
  namespace: opennms
  labels:
    app: alec
spec:
  serviceName: alec
  replicas: 2
  selector:
    matchLabels:
      app: alec
  template:
    metadata:
      labels:
        app: alec
    spec:
      terminationGracePeriodSeconds: 60
      affinity: # Avoid scheduling the pod in the same host as the Core OpenNMS when possible
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - onms
      initContainers:
      # Wait for all the dependencies
      - name: dependencies
        image: waisbrot/wait
        imagePullPolicy: IfNotPresent
        env:
        - name: TARGETS
          value: opennms-core.opennms.svc.cluster.local:8980
        - name: TIMEOUT
          value: '900'
      # Initialize Sentinel Configuration for ALEC in Distributed Mode
      # Requires the same image/version used at runtime: sentinel
      - name: init-config
        image: bash
        imagePullPolicy: IfNotPresent
        command: [ bash, /init.sh ]
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: INSTANCE_ID
          valueFrom:
            configMapKeyRef:
              key: OPENNMS_INSTANCE_ID
              name: common-settings
        - name: KAFKA_SERVER
          value: kafka.opennms.svc.cluster.local
        - name: KAFKA_SASL_USERNAME
          valueFrom:
            secretKeyRef:
              key: KAFKA_SASL_USERNAME
              name: onms-passwords
        - name: KAFKA_SASL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: KAFKA_SASL_PASSWORD
              name: onms-passwords
        - name: ZOOKEEPER_SERVER
          value: zookeeper.opennms.svc.cluster.local
        volumeMounts:
        - name: etc-overlay
          mountPath: /etc-overlay
        - name: init-scripts
          mountPath: /init.sh
          subPath: onms-alec-init.sh
      # Install ALEC assuming it is not present on the Sentinel Docker Image
      - name: alec-plugin
        image: busybox
        command: [ sh, -c ]
        args: [ "cd /plugin && wget -q -nc --no-check-certificate $ALEC_KAR_URL" ]
        env:
        - name: ALEC_KAR_URL
          value: https://github.com/OpenNMS/alec/releases/download/v1.1.1/opennms-alec-plugin.kar
        volumeMounts:
        - name: karaf-deploy
          mountPath: /plugin
      containers:
      - name: alec
        image: opennms/sentinel:28.1.1
        imagePullPolicy: IfNotPresent
        args:
        - -c
        ports:
        - containerPort: 8181
          name: http
        - containerPort: 8301
          name: karaf
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: OPENNMS_HTTP_URL
          value: http://opennms-core.opennms.svc.cluster.local:8980/opennms
        - name: OPENNMS_HTTP_USER
          value: admin
        - name: OPENNMS_HTTP_PASS
          valueFrom:
            secretKeyRef:
              key: OPENNMS_UI_ADMIN_PASSWORD
              name: onms-passwords
        - name: MEM_TOTAL_MB
          valueFrom:
            resourceFieldRef:
              resource: requests.memory
              divisor: 1Mi
        - name: JAVA_OPTS
          value: -Xms$(MEM_TOTAL_MB)m -Xmx$(MEM_TOTAL_MB)m -XX:+AlwaysPreTouch -XX:+UseG1GC -XX:+UseStringDeduplication
        volumeMounts:
        - name: etc-overlay
          mountPath: /opt/sentinel-etc-overlay
        - name: karaf-deploy
          mountPath: /opt/sentinel/deploy
        resources:
          limits:
            cpu: '1'
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        readinessProbe:
          exec:
            command:
            - /health.sh
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe: # WARNING: The health-check checks dependencies, which is not suitable for liveness probes
          exec:
            command:
            - /health.sh
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 15
      volumes:
      - name: etc-overlay
        emptyDir: {}
      - name: karaf-deploy
        emptyDir: {}
      - name: init-scripts
        configMap:
          name: init-scripts
