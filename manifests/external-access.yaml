# @author Alejandro Galue <agalue@opennms.org>
#
# With Kops, the dns-controller will automatically create entries on Route53 when --watch-ingress=true is applied.
# With EKS, GKE and AKS, external-dns will create entries on Route53.
#
# WARNING:
# Please use your own domains. This is not intended to be used by any user.

# Access to applications based on HTTP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: onms-ingress
  namespace: opennms
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/affinity: cookie
    ingress.kubernetes.io/session-cookie-name: route
    ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    cert-manager.io/issuer: letsencrypt-prod
    acme.cert-manager.io/http01-edit-in-place: 'true'
spec:
  tls:
    - secretName: opennms-ingress-cert
      hosts:
        - onms.aws.agalue.net
        - onmsui.aws.agalue.net
        - cassandra-reaper.aws.agalue.net
        - grafana.aws.agalue.net
        - hasura.aws.agalue.net
        - kafka-manager.aws.agalue.net
        - kibana.aws.agalue.net
        - elastichq.aws.agalue.net
        - tracing.aws.agalue.net
  rules:
    - host: onms.aws.agalue.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: opennms-core
                port:
                  number: 8980
    - host: onmsui.aws.agalue.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: opennms-ui
                port:
                  number: 8980
          - path: /opennms/nrt
            pathType: Prefix
            backend:
              service:
                name: opennms-core
                port:
                  number: 8980
    - host: cassandra-reaper.aws.agalue.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cassandra-reaper
                port:
                  number: 8080
    - host: grafana.aws.agalue.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
    - host: hasura.aws.agalue.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hasura
                port:
                  number: 8080
    - host: kafka-manager.aws.agalue.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kafka-manager
                port:
                  number: 9000
    - host: kibana.aws.agalue.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kibana
                port:
                  number: 5601
    - host: elastichq.aws.agalue.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: elastichq
                port:
                  number: 5000
    - host: tracing.aws.agalue.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: onms-tracing-query
                port:
                  number: 16686

# Access to applications based on gRPC
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grpc-ingress
  namespace: opennms
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: GRPC
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    nginx.ingress.kubernetes.io/auth-tls-secret: "opennms/minion-cert"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "false"
spec:
  tls:
    - secretName: grpc-ingress-cert
      hosts:
        - grpc.aws.agalue.net
  rules:
    - host: grpc.aws.agalue.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grpc-server
                port:
                  number: 8990
